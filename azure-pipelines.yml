# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solutionPath: 'TriviaGame'

steps:

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Project2-SonarCloud-Connection'
    organization: 'franciscog123-github'
    scannerMode: 'MSBuild'
    projectKey: 'Project2-TriviaGame-RestApi'
    projectName: 'Project2-TriviaGame-RestApi'
    extraProperties:
            sonar.cs.opencover.reportsPaths="$(Build.ArtifactStagingDirectory)/coverage/*"

- script: dotnet build --configuration $(buildConfiguration) $(solutionPath)
  displayName: 'dotnet build $(buildConfiguration) $(solutionPath)'

# do this after other tasks such as building
#- task: DotNetCoreCLI@2
#  inputs:
#    command: test
#    projects: '**/*Tests/*.csproj'
#    arguments: '--configuration $(buildConfiguration)'

- script: dotnet test
    --configuration $(buildConfiguration)
    /p:CollectCoverage=true
    /p:CoverletOutputFormat=opencover
    /p:CoverletOutput='$(Build.ArtifactStagingDirectory)/coverage/'
    /p:Exclude="[xunit*]*"
  workingDirectory: $(solutionPath)
  displayName: 'dotnet test $(buildConfiguration)'

- task: SonarCloudAnalyze@1
  inputs: {}

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Pay-As-You-Go(c46194b8-1218-46ee-82a1-de3fbcd60cc2)'
    appType: 'webApp'
    WebAppName: '1904-guerrerof-TriviaGameApi'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'    
